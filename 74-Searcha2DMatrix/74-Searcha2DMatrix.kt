        while (start <= end) {
        var end = arr.lastIndex
            val middle = start + (end - start) / 2
        var start = 0
    private fun binarySearch(arr: IntArray, target: Int): Boolean {

    }
        return binarySearch(array.toIntArray(), target)
        }
            list
            list.addAll(list2.toList())
        val array = matrix.fold(mutableListOf<Int>()){ list, list2 -> 
    fun searchMatrix(matrix: Array<IntArray>, target: Int): Boolean {
class Solution {
            when {
                arr[middle] == target -> return true
[
