                        arrayQueue.add(it)
                    }
                    it.right?.let{
                        arrayQueue.add(it)
                    it.left?.let{
                    sum += it.`val`
                node?.let{
                val node = arrayQueue.removeFirstOrNull()
            while(nodesInCurrentLevel > 0){
            var sum = 0
            nodesInCurrentLevel = arrayQueue.size
        while(arrayQueue.isNotEmpty()) {
        root?.let{ arrayQueue.addLast(it) }
        var nodesInCurrentLevel = 0
        var arrayQueue = ArrayDeque<TreeNode>()
        var sumArray = mutableListOf<Int>()
    fun deepestLeavesSum(root: TreeNode?): Int {
[
