        if (root.left == null && root.right == null)
            root1Leafs.addLast(root.`val`)
        node1Leafs(root.left)
        if (root == null) return
    private fun node1Leafs(root: TreeNode?) {

    }
        return root1Leafs == root2Leafs
        node1Leafs(root1)
        if (root1 == null || root2 == null) return false
    fun leafSimilar(root1: TreeNode?, root2: TreeNode?): Boolean {
    private var root2Leafs = ArrayDeque<Int>()
    private var root1Leafs = ArrayDeque<Int>()
class Solution {
 */
 * }
        node2Leafs(root2)
[
