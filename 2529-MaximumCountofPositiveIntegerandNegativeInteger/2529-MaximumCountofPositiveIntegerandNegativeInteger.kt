    private fun binarySearch(nums: IntArray, target: Int): Int {
        var start = 0
        var end = nums.lastIndex
        while (start <= end){
            val middle = start + (end - start) / 2
                start = middle + 1
            } else {
                end = middle - 1
            }
        }
           if(nums[middle] < target){

    }
        return maxOf(positive, negative)
        val negative = binarySearch(nums, 0)
        val positive = nums.size - binarySearch(nums, 1)
    fun maximumCount(nums: IntArray): Int {
class Solution {
        return start
    }
}
[
